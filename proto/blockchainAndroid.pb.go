// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: proto/blockchainAndroid.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *Success) Reset() {
	*x = Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blockchainAndroid_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchainAndroid_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_proto_blockchainAndroid_proto_rawDescGZIP(), []int{0}
}

func (x *Success) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blockchainAndroid_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchainAndroid_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_blockchainAndroid_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Points struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points int32 `protobuf:"varint,1,opt,name=points,proto3" json:"points,omitempty"`
}

func (x *Points) Reset() {
	*x = Points{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blockchainAndroid_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Points) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Points) ProtoMessage() {}

func (x *Points) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchainAndroid_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Points.ProtoReflect.Descriptor instead.
func (*Points) Descriptor() ([]byte, []int) {
	return file_proto_blockchainAndroid_proto_rawDescGZIP(), []int{2}
}

func (x *Points) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

var File_proto_blockchainAndroid_proto protoreflect.FileDescriptor

var file_proto_blockchainAndroid_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x38, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x20, 0x0a, 0x06, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x32, 0x97, 0x01, 0x0a, 0x11, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x12, 0x2a, 0x0a,
	0x09, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x0a, 0x53, 0x69, 0x67,
	0x6e, 0x55, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22,
	0x00, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_blockchainAndroid_proto_rawDescOnce sync.Once
	file_proto_blockchainAndroid_proto_rawDescData = file_proto_blockchainAndroid_proto_rawDesc
)

func file_proto_blockchainAndroid_proto_rawDescGZIP() []byte {
	file_proto_blockchainAndroid_proto_rawDescOnce.Do(func() {
		file_proto_blockchainAndroid_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_blockchainAndroid_proto_rawDescData)
	})
	return file_proto_blockchainAndroid_proto_rawDescData
}

var file_proto_blockchainAndroid_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_blockchainAndroid_proto_goTypes = []interface{}{
	(*Success)(nil), // 0: proto.Success
	(*User)(nil),    // 1: proto.User
	(*Points)(nil),  // 2: proto.Points
}
var file_proto_blockchainAndroid_proto_depIdxs = []int32{
	1, // 0: proto.BlockchainAndroid.LogInUser:input_type -> proto.User
	1, // 1: proto.BlockchainAndroid.SignUpUser:input_type -> proto.User
	1, // 2: proto.BlockchainAndroid.GetPoints:input_type -> proto.User
	0, // 3: proto.BlockchainAndroid.LogInUser:output_type -> proto.Success
	0, // 4: proto.BlockchainAndroid.SignUpUser:output_type -> proto.Success
	2, // 5: proto.BlockchainAndroid.GetPoints:output_type -> proto.Points
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_blockchainAndroid_proto_init() }
func file_proto_blockchainAndroid_proto_init() {
	if File_proto_blockchainAndroid_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_blockchainAndroid_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_blockchainAndroid_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_blockchainAndroid_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Points); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_blockchainAndroid_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_blockchainAndroid_proto_goTypes,
		DependencyIndexes: file_proto_blockchainAndroid_proto_depIdxs,
		MessageInfos:      file_proto_blockchainAndroid_proto_msgTypes,
	}.Build()
	File_proto_blockchainAndroid_proto = out.File
	file_proto_blockchainAndroid_proto_rawDesc = nil
	file_proto_blockchainAndroid_proto_goTypes = nil
	file_proto_blockchainAndroid_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BlockchainAndroidClient is the client API for BlockchainAndroid service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockchainAndroidClient interface {
	//simple RPC where client (android) sends request for email check - authentication
	LogInUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Success, error)
	//simple RPC where client enrolls new user in blockchain
	SignUpUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Success, error)
	//simple RPC where client requests for number of points
	GetPoints(ctx context.Context, in *User, opts ...grpc.CallOption) (*Points, error)
}

type blockchainAndroidClient struct {
	cc grpc.ClientConnInterface
}

func NewBlockchainAndroidClient(cc grpc.ClientConnInterface) BlockchainAndroidClient {
	return &blockchainAndroidClient{cc}
}

func (c *blockchainAndroidClient) LogInUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/proto.BlockchainAndroid/LogInUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainAndroidClient) SignUpUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/proto.BlockchainAndroid/SignUpUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainAndroidClient) GetPoints(ctx context.Context, in *User, opts ...grpc.CallOption) (*Points, error) {
	out := new(Points)
	err := c.cc.Invoke(ctx, "/proto.BlockchainAndroid/GetPoints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockchainAndroidServer is the server API for BlockchainAndroid service.
type BlockchainAndroidServer interface {
	//simple RPC where client (android) sends request for email check - authentication
	LogInUser(context.Context, *User) (*Success, error)
	//simple RPC where client enrolls new user in blockchain
	SignUpUser(context.Context, *User) (*Success, error)
	//simple RPC where client requests for number of points
	GetPoints(context.Context, *User) (*Points, error)
}

// UnimplementedBlockchainAndroidServer can be embedded to have forward compatible implementations.
type UnimplementedBlockchainAndroidServer struct {
}

func (*UnimplementedBlockchainAndroidServer) LogInUser(context.Context, *User) (*Success, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogInUser not implemented")
}
func (*UnimplementedBlockchainAndroidServer) SignUpUser(context.Context, *User) (*Success, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignUpUser not implemented")
}
func (*UnimplementedBlockchainAndroidServer) GetPoints(context.Context, *User) (*Points, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPoints not implemented")
}

func RegisterBlockchainAndroidServer(s *grpc.Server, srv BlockchainAndroidServer) {
	s.RegisterService(&_BlockchainAndroid_serviceDesc, srv)
}

func _BlockchainAndroid_LogInUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainAndroidServer).LogInUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BlockchainAndroid/LogInUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainAndroidServer).LogInUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainAndroid_SignUpUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainAndroidServer).SignUpUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BlockchainAndroid/SignUpUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainAndroidServer).SignUpUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainAndroid_GetPoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainAndroidServer).GetPoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BlockchainAndroid/GetPoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainAndroidServer).GetPoints(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockchainAndroid_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.BlockchainAndroid",
	HandlerType: (*BlockchainAndroidServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LogInUser",
			Handler:    _BlockchainAndroid_LogInUser_Handler,
		},
		{
			MethodName: "SignUpUser",
			Handler:    _BlockchainAndroid_SignUpUser_Handler,
		},
		{
			MethodName: "GetPoints",
			Handler:    _BlockchainAndroid_GetPoints_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/blockchainAndroid.proto",
}
